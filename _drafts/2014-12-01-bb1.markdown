---
layout: post
title:  "B1!"
date:   2014-12-01 18:01:27
categories: jekyll update
---

# b1

## b1 

## b2

## b3

## bbbbbbbb



#### 12312312312 

#### 12312312312 

#### 12312312312 

#### 12312312312 

#### 12312312312 




{% highlight java linenos %}
package com.bbgz.android.app.adapter;

import java.text.DecimalFormat;

import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Paint;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.android.volley.Request;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.Volley;
import com.bbgz.android.app.C;
import com.bbgz.android.app.R;
import com.bbgz.android.app.bean.CommonListBean;
import com.bbgz.android.app.net.BBGZNetParams;
import com.bbgz.android.app.net.BBGZRequest;
import com.bbgz.android.app.net.NI;
import com.bbgz.android.app.ui.CommodityActivity;
import com.bbgz.android.app.ui.LoginActivity;
import com.bbgz.android.app.utils.DigitalConverterUtil;
import com.bbgz.android.app.utils.ImageUrlReplace;
import com.bbgz.android.app.utils.LoginUserManagement;
import com.bbgz.android.app.utils.NetWorkUtil;
import com.bbgz.android.app.utils.UploadLogUtil;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonSyntaxException;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.assist.ImageLoadingListener;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;
import com.umeng.analytics.MobclickAgent;
import com.v1baobao.android.sdk.V1BaseAdapter;
import com.v1baobao.android.sdk.utils.ToastAlone;

import org.roboguice.shaded.goole.common.collect.ImmutableMap;

/**
 * 通用列表适配器
 * @since 2014年11月17日15:39:32
 * @author shuanjinzhang
 *
 */
public class CommonListAdapter extends V1BaseAdapter<CommonListBean> {
	protected DisplayImageOptions listViewOptions;
	private int paint=-1;
	 protected DecimalFormat decimalFormat;
	public CommonListAdapter(Context context) {
		super(context);
		listViewOptions = new DisplayImageOptions.Builder()
         .showImageOnLoading(R.drawable.icon_default)
         .showImageForEmptyUri(R.drawable.icon_default)
         .showImageOnFail(R.drawable.icon_default)
         .bitmapConfig(Bitmap.Config.RGB_565)
         .imageScaleType(ImageScaleType.EXACTLY)
         .cacheInMemory(true)
         .cacheOnDisc(true)
         .bitmapConfig(Bitmap.Config.RGB_565)
         .resetViewBeforeLoading(true)
         .displayer(new FadeInBitmapDisplayer(200))
         .build();
		 decimalFormat = new DecimalFormat("0.00");
	}
	
	@Override
	public int getCount() {
		if (null == datas || 0 == datas.size()) {
			return 0;
		}
		return datas.size() / 2 + datas.size() % 2;
	}

	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		if (null == convertView) {
			convertView = mInflater.inflate(R.layout.gv_item_goods, parent,
					false);
		}
		// 商品主图
		final ImageView imavPic1 = BaseViewHolder.get(convertView,
				R.id.imavPic1);
		// 商品名字
		TextView tvName1 = BaseViewHolder.get(convertView, R.id.tvName1);
		// 商品喜欢数目
		final TextView tvLikeNum1 = BaseViewHolder.get(convertView,
				R.id.tvLikeNum1);
		// 真实售价
		TextView price1 = BaseViewHolder.get(convertView, R.id.tvAddress1);
		// 市场价格 被划掉的价格
		TextView normal_price1 = BaseViewHolder.get(convertView,
				R.id.normal_price1);
		// 左边第一个区域
		RelativeLayout rlc1 = BaseViewHolder.get(convertView, R.id.rlC1);
		// 喜欢icon
		final ImageView isLike1 = BaseViewHolder.get(convertView,
				R.id.imavLikeFlag1);
		// 邮寄方式
		ImageView imavNationalFlag1 = BaseViewHolder.get(convertView,
				R.id.imavNationalFlag1);
		// 国家名字
		 TextView tvNationalName1 = BaseViewHolder.get(convertView,
		 R.id.tvNationalName1);
		// 喜欢icon
		// ImageView imavLikeFlag1 =
		// BaseViewHolder.get(convertView,R.id.imavLikeFlag1);

		final ImageView imavPic2 = BaseViewHolder.get(convertView,
				R.id.imavPic2);
		TextView tvName2 = BaseViewHolder.get(convertView, R.id.tvName2);
		final TextView tvLikeNum2 = BaseViewHolder.get(convertView,
				R.id.tvLikeNum2);
		TextView price2 = BaseViewHolder.get(convertView, R.id.tvAddress2);
		TextView normal_price2 = BaseViewHolder.get(convertView,
				R.id.normal_price2);
		RelativeLayout rlC2 = BaseViewHolder.get(convertView, R.id.rlC2);
		final ImageView isLike2 = BaseViewHolder.get(convertView,
				R.id.imavLikeFlag2);
		 ImageView imavNationalFlag2 = BaseViewHolder.get(convertView,
		 R.id.imavNationalFlag2);
		 TextView tvNationalName2 = BaseViewHolder.get(convertView,
		 R.id.tvNationalName2);
		 
		 if(-1==paint){
			 paint = normal_price1.getPaint().getFlags();
		 }
		// ImageView imavLikeFlag2 =
		// BaseViewHolder.get(convertView,R.id.imavLikeFlag2);

		int size = getDatas().size();

		if ((position * 2) < size) {
			ImageLoader.getInstance().displayImage(
                    ImageUrlReplace.replace(getItem(position * 2).imageurl), imavPic1,
					listViewOptions, new ImageLoadingListener() {
						@Override
						public void onLoadingStarted(String imageUri,
								View view) {
							imavPic1.setBackgroundResource(C.PollColors.drawables[(position * 2)
									% C.PollColors.count]);
						}

						@Override
						public void onLoadingFailed(String imageUri,
								View view, FailReason failReason) {

						}

						@Override
						public void onLoadingComplete(String imageUri,
								View view, Bitmap loadedImage) {
							imavPic1.setBackgroundResource(R.drawable.pic_write);
						}

						@Override
						public void onLoadingCancelled(String imageUri,
								View view) {

						}
					});
			String currency_symbol;
			String currency_market_price;
			if("1".equals(getItem(position * 2).isOverSea)){
				normal_price1.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);
				imavNationalFlag1.setVisibility(View.VISIBLE);
				tvNationalName1.setVisibility(View.VISIBLE);
				imavNationalFlag1.setImageResource(R.drawable.icon_baoshui_tag);
				tvNationalName1.setText("保税仓");
				currency_symbol = "￥";
				currency_market_price = getItem(position * 2).market_price;
			}else if("2".equals(getItem(position * 2).isOverSea)){
				imavNationalFlag1.setVisibility(View.VISIBLE);
				tvNationalName1.setVisibility(View.VISIBLE);
				normal_price1.getPaint().setFlags(paint);
				imavNationalFlag1.setImageResource(R.drawable.icon_haiwai_tag);
				tvNationalName1.setText("海外仓");
				currency_symbol = getItem(position * 2).currency_symbol;
				currency_market_price = getItem(position * 2).currency_market_price;
			}else{
				normal_price1.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);
				currency_symbol = "￥";
				currency_market_price = getItem(position * 2).market_price;
				imavNationalFlag1.setVisibility(View.INVISIBLE);
				tvNationalName1.setVisibility(View.INVISIBLE);
			}
			
			tvName1.setText(getItem(position * 2).name);
			tvLikeNum1.setText(getItem(position * 2).likeNum);
			String s1, s2;
			s1 = getItem(position * 2).store_price;
			s2 = currency_market_price;
			price1.setText("￥"
					+ decimalFormat.format(DigitalConverterUtil
							.string2Double(s1)));
			normal_price1.setText(currency_symbol
					+ decimalFormat.format(DigitalConverterUtil
							.string2Double(s2)));
			
			// CountryInfoBean countryInfoBean = getItem(position *
			// 2).country_info;
			// if (null != countryInfoBean) {
			// ImageLoader.getInstance().displayImage(countryInfoBean.mobi_image_url,
			// imavNationalFlag1);
			// tvNationalName1.setText(countryInfoBean.name);
			// }
			if ("false".equals(getItem(position * 2).isLiked)) {
				isLike1.setImageResource(R.drawable.icon_like_normal);

			} else {
				isLike1.setImageResource(R.drawable.icon_like_select);
			}
			isLike1.setOnClickListener(new View.OnClickListener() {

				@Override
				public void onClick(View v) {
					if (!LoginUserManagement.isLogin()) {
						mContext.startActivity(new Intent(mContext,
								LoginActivity.class));
					} else {
						isLike1.setImageResource(R.drawable.icon_like_select);
						addLove(getItem(position * 2), "true"
								.equals(getItem(position * 2).isLiked),
								tvLikeNum1);
					}
				}
			});

			rlc1.setOnClickListener(new View.OnClickListener() {

				@Override
				public void onClick(View v) {
					MobclickAgent.onEvent(mContext,
							C.UMeng.EVENT_goto_product_details_click,
							ImmutableMap.of(C.UMeng.KEY_click_num, "搜索"));
					Intent intent = new Intent(mContext,
							CommodityActivity.class);
					intent.putExtra("product_id",
							getItem(position * 2).product_id);
					mContext.startActivity(intent);
				}
			});

			if ((position * 2 + 1) < size) {

				rlC2.setVisibility(View.VISIBLE);
				ImageLoader.getInstance().displayImage(
                        ImageUrlReplace.replace(getItem(position * 2 + 1).imageurl), imavPic2,
						listViewOptions, new ImageLoadingListener() {
							@Override
							public void onLoadingStarted(String imageUri,
									View view) {
								imavPic2.setBackgroundResource(C.PollColors.drawables[(position * 2 + 1)
										% C.PollColors.count]);
							}

							@Override
							public void onLoadingFailed(String imageUri,
									View view, FailReason failReason) {

							}

							@Override
							public void onLoadingComplete(String imageUri,
									View view, Bitmap loadedImage) {
								imavPic2.setBackgroundResource(R.drawable.pic_write);
							}

							@Override
							public void onLoadingCancelled(String imageUri,
									View view) {

							}
						});
				String currency_symbol2;
				String currency_market_price2;
				if("1".equals(getItem(position * 2+1).isOverSea)){
					normal_price2.getPaint().setFlags(
							Paint.STRIKE_THRU_TEXT_FLAG);
					currency_symbol2 = "￥";
					currency_market_price2 = getItem(position * 2+1).market_price;
					imavNationalFlag2.setVisibility(View.VISIBLE);
					tvNationalName2.setVisibility(View.VISIBLE);
					imavNationalFlag2.setImageResource(R.drawable.icon_baoshui_tag);
					tvNationalName2.setText("保税仓");
				}else if("2".equals(getItem(position * 2+1).isOverSea)){
					currency_symbol2 = getItem(position * 2+1).currency_symbol;
					currency_market_price2 = getItem(position * 2+1).currency_market_price;
					imavNationalFlag2.setVisibility(View.VISIBLE);
					tvNationalName2.setVisibility(View.VISIBLE);
					imavNationalFlag2.setImageResource(R.drawable.icon_haiwai_tag);
					tvNationalName2.setText("海外仓");
					normal_price2.getPaint().setFlags(paint);
				}else{
					normal_price2.getPaint().setFlags(
							Paint.STRIKE_THRU_TEXT_FLAG);
					currency_symbol2 = "￥";
					currency_market_price2 = getItem(position * 2+1).market_price;
					imavNationalFlag2.setVisibility(View.INVISIBLE);
					tvNationalName2.setVisibility(View.INVISIBLE);
					
				}
				tvName2.setText(getItem(position * 2 + 1).name);
				tvLikeNum2.setText(getItem(position * 2 + 1).likeNum);

				String s3, s4;
				s3 = getItem(position * 2 + 1).store_price;
				s4 = currency_market_price2;
				price2.setText("￥"
						+ decimalFormat.format(DigitalConverterUtil
								.string2Double(s3)));
				normal_price2.setText(currency_symbol2
						+ decimalFormat.format(DigitalConverterUtil
								.string2Double(s4)));
				// CountryInfoBean countryInfoBean2 = getItem(position *
				// 2+1).country_info;
				// if (null != countryInfoBean) {
				// ImageLoader.getInstance().displayImage(countryInfoBean2.mobi_image_url,
				// imavNationalFlag2);
				// tvNationalName2.setText(countryInfoBean2.name);
				// }
				if ("false".equals(getItem(position * 2 + 1).isLiked)) {
					isLike2.setImageResource(R.drawable.icon_like_normal);
				} else {
					isLike2.setImageResource(R.drawable.icon_like_select);
				}

				isLike2.setOnClickListener(new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						if (!LoginUserManagement.isLogin()) {
							mContext.startActivity(new Intent(mContext,
									LoginActivity.class));
						} else {
							isLike2.setImageResource(R.drawable.icon_like_select);
							addLove(getItem(position * 2 + 1),
									"true".equals(getItem(position * 2 + 1).isLiked),
									tvLikeNum2);
						}
					}
				});

				rlC2.setOnClickListener(new View.OnClickListener() {

					@Override
					public void onClick(View v) {
						MobclickAgent.onEvent(mContext,
								C.UMeng.EVENT_goto_product_details_click,
								ImmutableMap
										.of(C.UMeng.KEY_click_num, "搜索"));
						Intent intent = new Intent(mContext,
								CommodityActivity.class);
						intent.putExtra(
								"product_id",
						getItem(position * 2 + 1).product_id);
						mContext.startActivity(intent);
					}
				});
			} else {
				rlC2.setVisibility(View.INVISIBLE);
			}
		}
		return convertView;
	}
	
	private void addLove(final CommonListBean pb, boolean islike, final TextView tv) {
		final BBGZNetParams params = new BBGZNetParams();
		if (!NetWorkUtil.isOnline(mContext)) {
			ToastAlone.show(mContext, "网络不好");
			return;
		}
		if (islike) {
			ToastAlone.show(mContext, "已收藏");
			return;
		}
		params.put("origin_id", pb.product_id);
		params.put("origin", "1");

		BBGZRequest v1q = new BBGZRequest(Request.Method.POST,NI.My_Love_Add_love,
				params.getParams(), new BBGZRequest.CallBackListener() {

					@Override
					public void onErrorResponse(VolleyError error) {

					}

					@Override
					public void onResponse(String response) {
						try {
							Gson gson = new Gson();
							JsonObject jsonObject = gson.fromJson(response,
									JsonObject.class);
							int code = jsonObject.get("code").getAsInt();
							if (C.GlobalConfig.SUCCESS_CODE == code) {
								String t = tv.getText().toString();
								try {
									int nu = Integer.parseInt(t) + 1;
									t = nu + "";
								} catch (Exception e) {
									e.printStackTrace();
								}
								pb.isLiked = "true";
								pb.likeNum = t;
								tv.setText(t);
								ToastAlone.show(mContext, "收藏成功");
							} else if (0 == code) {
								String msg = jsonObject.get("msg")
										.getAsString();
								ToastAlone.show(mContext, msg);
								UploadLogUtil.uploadV1BBInterfaceError(
										NI.My_Love_Add_love, url,
										params.toString(), msg);
							} else {
								ToastAlone.show(mContext, "其他问题");
								UploadLogUtil.uploadV1BBInterfaceError(
										NI.My_Love_Add_love, url,
										params.toString(), "其他问题");
							}
						} catch (JsonSyntaxException e) {
							ToastAlone.show(mContext, "数据解析错误");
							UploadLogUtil.uploadV1BBInterfaceError(
									NI.My_Love_Add_love, url,
									params.toString(), "数据解析异常");
							e.printStackTrace();
						} catch (Exception e) {
							e.printStackTrace();
							ToastAlone.show(mContext, "数据异常");
							UploadLogUtil.uploadV1BBInterfaceError(
									NI.My_Love_Add_love, url,
									params.toString(), "数据返回异常");
						}
					}

					String url;

					@Override
					public void returnUrl(String url) {
						this.url = url;
					}
				});
		Volley.newRequestQueue(mContext).add(v1q);
	}

}
{% endhighlight %}	
